# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  # Pylint:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       python-version: ["3.12"]

  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Set up Python ${{ matrix.python-version }}
  #     uses: actions/setup-python@v3
  #     with:
  #       python-version: ${{ matrix.python-version }}
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       python -m pip install flake8 pytest
  #       python -m pip install chainlit~=1.0.200 flask~=2.3.2 flask-restful==0.3.9
  #       if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
  #   - name: Lint with flake8
  #     run: |
  #       # stop the build if there are Python syntax errors or undefined names
  #       flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
  #       # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
  #       flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  Linux-CI-Tests:
    runs-on: ubuntu-latest
    env:
      APPBUILDER_TOKEN: bce-v3/ALTAK-RPJR9XSOVFl6mb5GxHbfU/072be74731e368d8bbb628a8941ec50aaeba01cd
      APPBUILDER_TOKEN_V2: bce-v3/ALTAK-zX2OwTWGE9JxXSKxcBYQp/7dd073d9129c01c617ef76d8b7220a74835eb2f4
      BAIDU_VDB_API_KEY: apaasTest1
      INSTANCE_ID: vdb-bj-vuzmppgqrnhv
      DATASET_ID: c4652b26-3f2b-4cd1-9ca2-98cd26adc36f
      APPBUILDER_TOKEN_DOC_FORMAT: bce-v3/ALTAK-bcKsgHd39g0Aaq3nCYUUQ/b06384229df1462c6fb011383d09230346a20ac4
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9","3.12"]
    
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Print ENV
      run: |
        env
        ls
        pwd
    - name: Git Clone And Checkout Branch
      run: |
        fork_repo="https://github.com/$GITHUB_ACTOR/app-builder.git"
        mkdir cicd
        cd cicd
        git clone $fork_repo
        cd app-builder
        git checkout $GITHUB_HEAD_REF
        git remote add upstream https://github.com/baidubce/app-builder.git 
        git fetch upstream
        git remote -v
        git status
        pwd
    - name: Install dependencies
      run: |
        cd cicd/app-builder
        pwd
        python3 -m ensurepip --upgrade
        python3 -m pip install --upgrade pip
        python3 -m pip install --upgrade setuptools
        python3 -m pip install wheel
        python3 -m pip install coverage
        python3 -m pip install diff-cover
        python3 -m pip install chainlit~=1.0.200 flask~=2.3.2 flask-restful==0.3.9
    - name: Build whl
      run: |
        cd cicd/app-builder     
        pwd
        python3 setup.py bdist_wheel
        python3 -m pip uninstall -y appbuilder-sdk
        python3 -m pip install dist/*.whl
    - name: Test with unittest
      run: |
        cd cicd/app-builder
        pwd
        sh appbuilder/tests/run_python_test.sh
